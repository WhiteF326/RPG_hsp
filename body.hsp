;#const giX 10
;#const giY 11
randomize
#const windowMulti 125
#const windowSize 480 * windowMulti / 100
#module
#defcfunc pow int x, int y
	dim ans : ans = 1
	repeat y : ans = ans * x : loop
	return ans
#global

*init
	;マップチップ読み込み
	buffer 32
	picload "Chips/MapChip.png", 32

	;メインウィンドウ読み込み
	screen 0, windowSize, windowSize, 0

	;マップ変数用意
	dim mSize : mSize = 24
	dim frq : frq = 8
	dim chipSize : chipSize = windowSize / mSize
	dim map, mSize, mSize
	sdim buf, 32000
	notesel buf : noteload "Elements/ChipPoint.txt"
	dim mapPoints, 2, notemax / 2			;todo 2で割り切れない時の対策
	repeat notemax
		sdim t, 16 : noteget t, cnt
		mapPoints(cnt \ 2, cnt / 2) = int(t)
	loop

*main
	gosub *mapGenerate
	gosub *mapPaint
	stop

*mapGenerate
	dim roomAmount : roomAmount = pow((mSize / frq), 2)
	repeat roomAmount
		dim pointers, 4
		pointers(0) = rnd(frq) + ((cnt \ 3) * frq) : pointers(1) = rnd(frq) + ((cnt / 3) * frq)
		pointers(2) = rnd(frq / 2) + frq / 2 : pointers(3) = rnd(frq / 2) + frq / 2
		repeat pointers(2)
			x = cnt
			if (pointers(0) \ frq) + cnt < frq{
				repeat pointers(3)
					if (pointers(1) \ frq) + cnt < frq{
						map(pointers(0) + x, pointers(1) + cnt) = 1
					}
				loop
			}
		loop
	loop
	return

*mapPaint
	gsel 0
	repeat mSize
		x = cnt
		repeat mSize
			pos x * chipSize, cnt * chipSize
			gzoom chipSize, chipSize, 32, mapPoints(0, map(x, cnt)) * 16, mapPoints(1, map(x, cnt)) * 16, 16, 16
		loop
	loop
	return
